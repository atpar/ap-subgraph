specVersion: 0.0.3
description: {{description}}
repository: https://github.com/atpar/ap-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ANNRegistry
    network: {{network}}
    source:
      address: '{{ANNRegistry}}'
      abi: ANNRegistry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - ANNAsset
        - ANNTerms
        - ANNState
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: ANNRegistry
          file: ./build/contracts/ANNRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetANN
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessANN
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessANN
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryANN
        - event: UpdatedObligor(bytes32,address,address)
          handler: handleUpdatedObligorANN
        - event: UpdatedTerms(indexed bytes32)
          handler: handleUpdatedTermsANN
        - event: UpdatedState(indexed bytes32,uint256)
          handler: handleUpdatedStateANN
        - event: UpdatedFinalizedState(indexed bytes32,uint256)
          handler: handleUpdatedFinalizedStateANN
      file: ./src/ANN.ts
  - kind: ethereum/contract
    name: ANNActor
    network: {{network}}
    source:
      address: '{{ANNActor}}'
      abi: ANNActor
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - ANNState
        - Schedule
      abis:
        - name: ANNActor
          file: ./build/contracts/ANNActor.json
        - name: ANNRegistry
          file: ./build/contracts/ANNRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetANN
      file: ./src/ANN.ts
  - kind: ethereum/contract
    name: CECRegistry
    network: {{network}}
    source:
      address: '{{CECRegistry}}'
      abi: CECRegistry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CECAsset
        - CECTerms
        - CECState
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: CECRegistry
          file: ./build/contracts/CECRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetCEC
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessCEC
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessCEC
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryCEC
        - event: UpdatedObligor(bytes32,address,address)
          handler: handleUpdatedObligorCEC
        - event: UpdatedTerms(indexed bytes32)
          handler: handleUpdatedTermsCEC
        - event: UpdatedState(indexed bytes32,uint256)
          handler: handleUpdatedStateCEC
        - event: UpdatedFinalizedState(indexed bytes32,uint256)
          handler: handleUpdatedFinalizedStateCEC
      file: ./src/CEC.ts
  - kind: ethereum/contract
    name: CECActor
    network: {{network}}
    source:
      address: '{{CECActor}}'
      abi: CECActor
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CECState
        - Schedule
      abis:
        - name: CECActor
          file: ./build/contracts/CECActor.json
        - name: CECRegistry
          file: ./build/contracts/CECRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetCEC
      file: ./src/CEC.ts
  - kind: ethereum/contract
    name: CEGRegistry
    network: {{network}}
    source:
      address: '{{CEGRegistry}}'
      abi: CEGRegistry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CEGAsset
        - CEGTerms
        - CEGState
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: CEGRegistry
          file: ./build/contracts/CEGRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetCEG
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessCEG
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessCEG
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryCEG
        - event: UpdatedObligor(bytes32,address,address)
          handler: handleUpdatedObligorCEG
        - event: UpdatedTerms(indexed bytes32)
          handler: handleUpdatedTermsCEG
        - event: UpdatedState(indexed bytes32,uint256)
          handler: handleUpdatedStateCEG
        - event: UpdatedFinalizedState(indexed bytes32,uint256)
          handler: handleUpdatedFinalizedStateCEG
      file: ./src/CEG.ts
  - kind: ethereum/contract
    name: CEGActor
    network: {{network}}
    source:
      address: '{{CEGActor}}'
      abi: CEGActor
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CEGState
        - Schedule
      abis:
        - name: CEGActor
          file: ./build/contracts/CEGActor.json
        - name: CEGRegistry
          file: ./build/contracts/CEGRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetCEG
      file: ./src/CEG.ts
  - kind: ethereum/contract
    name: CERTFRegistry
    network: {{network}}
    source:
      address: '{{CERTFRegistry}}'
      abi: CERTFRegistry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CERTFAsset
        - CERTFTerms
        - CERTFState
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: CERTFRegistry
          file: ./build/contracts/CERTFRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetCERTF
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessCERTF
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessCERTF
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryCERTF
        - event: UpdatedObligor(bytes32,address,address)
          handler: handleUpdatedObligorCERTF
        - event: UpdatedTerms(indexed bytes32)
          handler: handleUpdatedTermsCERTF
        - event: UpdatedState(indexed bytes32,uint256)
          handler: handleUpdatedStateCERTF
        - event: UpdatedFinalizedState(indexed bytes32,uint256)
          handler: handleUpdatedFinalizedStateCERTF
      file: ./src/CERTF.ts
  - kind: ethereum/contract
    name: CERTFActor
    network: {{network}}
    source:
      address: '{{CERTFActor}}'
      abi: CERTFActor
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CERTFState
        - Schedule
      abis:
        - name: CERTFActor
          file: ./build/contracts/CERTFActor.json
        - name: CERTFRegistry
          file: ./build/contracts/CERTFRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetCERTF
      file: ./src/CERTF.ts
  - kind: ethereum/contract
    name: PAMRegistry
    network: {{network}}
    source:
      address: '{{PAMRegistry}}'
      abi: PAMRegistry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - PAMAsset
        - PAMTerms
        - PAMState
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: PAMRegistry
          file: ./build/contracts/PAMRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetPAM
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessPAM
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessPAM
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryPAM
        - event: UpdatedObligor(bytes32,address,address)
          handler: handleUpdatedObligorPAM
        - event: UpdatedTerms(indexed bytes32)
          handler: handleUpdatedTermsPAM
        - event: UpdatedState(indexed bytes32,uint256)
          handler: handleUpdatedStatePAM
        - event: UpdatedFinalizedState(indexed bytes32,uint256)
          handler: handleUpdatedFinalizedStatePAM
      file: ./src/PAM.ts
  - kind: ethereum/contract
    name: PAMActor
    network: {{network}}
    source:
      address: '{{PAMActor}}'
      abi: PAMActor
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - PAMState
        - Schedule
      abis:
        - name: PAMActor
          file: ./build/contracts/PAMActor.json
        - name: PAMRegistry
          file: ./build/contracts/PAMRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetPAM
      file: ./src/PAM.ts
  - kind: ethereum/contract
    name: STKRegistry
    network: {{network}}
    source:
      address: '{{STKRegistry}}'
      abi: STKRegistry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - STKAsset
        - STKTerms
        - STKState
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: STKRegistry
          file: ./build/contracts/STKRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetSTK
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessSTK
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessSTK
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiarySTK
        - event: UpdatedObligor(bytes32,address,address)
          handler: handleUpdatedObligorSTK
        - event: UpdatedTerms(indexed bytes32)
          handler: handleUpdatedTermsSTK
        - event: UpdatedState(indexed bytes32,uint256)
          handler: handleUpdatedStateSTK
        - event: UpdatedFinalizedState(indexed bytes32,uint256)
          handler: handleUpdatedFinalizedStateSTK
      file: ./src/STK.ts
  - kind: ethereum/contract
    name: STKActor
    network: {{network}}
    source:
      address: '{{STKActor}}'
      abi: STKActor
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - STKState
        - Schedule
      abis:
        - name: STKActor
          file: ./build/contracts/STKActor.json
        - name: STKRegistry
          file: ./build/contracts/STKRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetSTK
      file: ./src/STK.ts
  - kind: ethereum/contract
    name: COLLARegistry
    network: {{network}}
    source:
      address: '{{COLLARegistry}}'
      abi: COLLARegistry
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - COLLAAsset
        - COLLATerms
        - COLLAState
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: COLLARegistry
          file: ./build/contracts/COLLARegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetCOLLA
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessCOLLA
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessCOLLA
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryCOLLA
        - event: UpdatedObligor(bytes32,address,address)
          handler: handleUpdatedObligorCOLLA
        - event: UpdatedTerms(indexed bytes32)
          handler: handleUpdatedTermsCOLLA
        - event: UpdatedState(indexed bytes32,uint256)
          handler: handleUpdatedStateCOLLA
        - event: UpdatedFinalizedState(indexed bytes32,uint256)
          handler: handleUpdatedFinalizedStateCOLLA
      file: ./src/COLLA.ts
  - kind: ethereum/contract
    name: COLLAActor
    network: {{network}}
    source:
      address: '{{COLLAActor}}'
      abi: COLLAActor
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - COLLAState
        - Schedule
      abis:
        - name: COLLAActor
          file: ./build/contracts/COLLAActor.json
        - name: COLLARegistry
          file: ./build/contracts/COLLARegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetCOLLA
      file: ./src/COLLA.ts
  - kind: ethereum/contract
    name: DataRegistryProxy
    network: {{network}}
    source:
      address: '{{DataRegistryProxy}}'
      abi: DataRegistryProxy
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - DataSet
        - DataPoint
      abis:
        - name: DataRegistryProxy
          file: ./build/contracts/DataRegistryProxy.json
      eventHandlers:
        - event: UpdatedDataProvider(indexed bytes32,address)
          handler: handleUpdatedDataProvider
        - event: PublishedDataPoint(indexed bytes32,int256,uint256)
          handler:  handlePublishedDataPoint
      file: ./src/DR.ts
  - kind: ethereum/contract
    name: DvPSettlement
    network: {{network}}
    source:
      address: '{{DvPSettlement}}'
      abi: DvPSettlement
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - DvPSettlementData
      abis:
        - name: DvPSettlement
          file: ./build/contracts/DvPSettlement.json
      eventHandlers:
        - event: SettlementInitialized(indexed uint256,(address,address,uint256,address,address,address,uint256,uint256,uint8))
          handler: handleSettlementInitialized        
        - event: SettlementExecuted(indexed uint256,indexed address)
          handler: handleSettlementExecuted
        - event: SettlementExpired(indexed uint256)
          handler: handleSettlementExpired
      file: ./src/DvP.ts
