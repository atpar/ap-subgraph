specVersion: 0.0.3
description: {{description}}
repository: https://github.com/atpar/ap-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: ANNRegistry
    network: {{network}}
    source:
      address: '{{ANNRegistry}}'
      abi: ANNRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - ANNAsset
        - ANNTerms
        - State
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: ANNRegistry
          file: ./build/contracts/ANNRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetANN
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessANN
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessANN
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryANN
      file: ./src/ANN.ts
  - kind: ethereum/contract
    name: ANNActor
    network: {{network}}
    source:
      address: '{{ANNActor}}'
      abi: ANNActor
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - State
        - Schedule
      abis:
        - name: ANNActor
          file: ./build/contracts/ANNActor.json
        - name: ANNRegistry
          file: ./build/contracts/ANNRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetANN
      file: ./src/ANN.ts
  - kind: ethereum/contract
    name: CECRegistry
    network: {{network}}
    source:
      address: '{{CECRegistry}}'
      abi: CECRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CECAsset
        - CECTerms
        - State
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: CECRegistry
          file: ./build/contracts/CECRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetCEC
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessCEC
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessCEC
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryCEC
      file: ./src/CEC.ts
  - kind: ethereum/contract
    name: CECActor
    network: {{network}}
    source:
      address: '{{CECActor}}'
      abi: CECActor
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - State
        - Schedule
      abis:
        - name: CECActor
          file: ./build/contracts/CECActor.json
        - name: CECRegistry
          file: ./build/contracts/CECRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetCEC
      file: ./src/CEC.ts
  - kind: ethereum/contract
    name: CEGRegistry
    network: {{network}}
    source:
      address: '{{CEGRegistry}}'
      abi: CEGRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CEGAsset
        - CEGTerms
        - State
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: CEGRegistry
          file: ./build/contracts/CEGRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetCEG
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessCEG
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessCEG
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryCEG
      file: ./src/CEG.ts
  - kind: ethereum/contract
    name: CEGActor
    network: {{network}}
    source:
      address: '{{CEGActor}}'
      abi: CEGActor
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - State
        - Schedule
      abis:
        - name: CEGActor
          file: ./build/contracts/CEGActor.json
        - name: CEGRegistry
          file: ./build/contracts/CEGRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetCEG
      file: ./src/CEG.ts
  - kind: ethereum/contract
    name: CERTFRegistry
    network: {{network}}
    source:
      address: '{{CERTFRegistry}}'
      abi: CERTFRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CERTFAsset
        - CERTFTerms
        - State
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: CERTFRegistry
          file: ./build/contracts/CERTFRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetCERTF
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessCERTF
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessCERTF
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryCERTF
      file: ./src/CERTF.ts
  - kind: ethereum/contract
    name: CERTFActor
    network: {{network}}
    source:
      address: '{{CERTFActor}}'
      abi: CERTFActor
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - State
        - Schedule
      abis:
        - name: CERTFActor
          file: ./build/contracts/CERTFActor.json
        - name: CERTFRegistry
          file: ./build/contracts/CERTFRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetCERTF
      file: ./src/CERTF.ts
  - kind: ethereum/contract
    name: PAMRegistry
    network: {{network}}
    source:
      address: '{{PAMRegistry}}'
      abi: PAMRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - PAMAsset
        - PAMTerms
        - State
        - AssetOwnership
        - Schedule
        - Period
        - Cycle
        - ContractReference
        - Admins
      abis:
        - name: PAMRegistry
          file: ./build/contracts/PAMRegistry.json
      eventHandlers:
        - event: RegisteredAsset(bytes32)
          handler: handleRegisteredAssetPAM
        - event: GrantedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleGrantedAccessPAM
        - event: RevokedAccess(indexed bytes32,indexed address,bytes4)
          handler: handleRevokedAccessPAM
        - event: UpdatedBeneficiary(bytes32,address,address)
          handler: handleUpdatedBeneficiaryPAM
      file: ./src/PAM.ts
  - kind: ethereum/contract
    name: PAMActor
    network: {{network}}
    source:
      address: '{{PAMActor}}'
      abi: PAMActor
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - State
        - Schedule
      abis:
        - name: PAMActor
          file: ./build/contracts/PAMActor.json
        - name: PAMRegistry
          file: ./build/contracts/PAMRegistry.json
      eventHandlers:
        - event: ProgressedAsset(indexed bytes32,uint8,uint256,int256)
          handler: handleProgressedAssetPAM
      file: ./src/PAM.ts
  - kind: ethereum/contract
    name: DataRegistry
    network: {{network}}
    source:
      address: '{{DataRegistry}}'
      abi: DataRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - DataSet
        - DataPoint
      abis:
        - name: DataRegistry
          file: ./build/contracts/DataRegistry.json
      eventHandlers:
        - event: UpdatedDataProvider(indexed bytes32,address)
          handler: handleUpdatedDataProvider
        - event: PublishedDataPoint(indexed bytes32,int256,uint256)
          handler:  handlePublishedDataPoint
      file: ./src/DR.ts
  - kind: ethereum/contract
    name: FDTFactory
    network: {{network}}
    source:
      address: '{{FDTFactory}}'
      abi: FDTFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Distributor
        - Holder
      abis:
        - name: FDTFactory
          file: ./build/contracts/FDTFactory.json
      eventHandlers:
        - event: DeployedDistributor(address,address)
          handler: handleDeployedDistributor
      file: ./src/FDT.ts
templates:
  - kind: ethereum/contract
    name: FDT
    network: {{network}}
    source:
      abi: VanillaFDT
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Distributor
        - Holder
      abis:
        - name: VanillaFDT
          file: ./build/contracts/VanillaFDT.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/FDT.ts

