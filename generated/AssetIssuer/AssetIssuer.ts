// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class AssetIssued extends EthereumEvent {
  get params(): AssetIssued__Params {
    return new AssetIssued__Params(this);
  }
}

export class AssetIssued__Params {
  _event: AssetIssued;

  constructor(event: AssetIssued) {
    this._event = event;
  }

  get assetId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get recordCreator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get counterparty(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AssetIssuer extends SmartContract {
  static bind(address: Address): AssetIssuer {
    return new AssetIssuer("AssetIssuer", address);
  }

  PRECISION(): BigInt {
    let result = super.call("PRECISION", []);

    return result[0].toBigInt();
  }

  try_PRECISION(): CallResult<BigInt> {
    let result = super.tryCall("PRECISION", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigInt());
  }
}

export class FillOrderCall extends EthereumCall {
  get inputs(): FillOrderCall__Inputs {
    return new FillOrderCall__Inputs(this);
  }

  get outputs(): FillOrderCall__Outputs {
    return new FillOrderCall__Outputs(this);
  }
}

export class FillOrderCall__Inputs {
  _call: FillOrderCall;

  constructor(call: FillOrderCall) {
    this._call = call;
  }

  get order(): FillOrderCallOrderStruct {
    return this._call.inputValues[0].value.toTuple() as FillOrderCallOrderStruct;
  }

  get makerSignature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get takerSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class FillOrderCall__Outputs {
  _call: FillOrderCall;

  constructor(call: FillOrderCall) {
    this._call = call;
  }
}

export class FillOrderCallOrderStruct extends EthereumTuple {
  get maker(): Address {
    return this[0].toAddress();
  }

  get taker(): Address {
    return this[1].toAddress();
  }

  get engine(): Address {
    return this[2].toAddress();
  }

  get actor(): Address {
    return this[3].toAddress();
  }

  get terms(): FillOrderCallOrderTermsStruct {
    return this[4].toTuple() as FillOrderCallOrderTermsStruct;
  }

  get makerCreditEnhancement(): Address {
    return this[5].toAddress();
  }

  get takerCreditEnhancement(): Address {
    return this[6].toAddress();
  }

  get salt(): BigInt {
    return this[7].toBigInt();
  }
}

export class FillOrderCallOrderTermsStruct extends EthereumTuple {
  get contractType(): i32 {
    return this[0].toI32();
  }

  get calendar(): i32 {
    return this[1].toI32();
  }

  get contractRole(): i32 {
    return this[2].toI32();
  }

  get creatorID(): Bytes {
    return this[3].toBytes();
  }

  get counterpartyID(): Bytes {
    return this[4].toBytes();
  }

  get dayCountConvention(): i32 {
    return this[5].toI32();
  }

  get businessDayConvention(): i32 {
    return this[6].toI32();
  }

  get endOfMonthConvention(): i32 {
    return this[7].toI32();
  }

  get currency(): Address {
    return this[8].toAddress();
  }

  get scalingEffect(): i32 {
    return this[9].toI32();
  }

  get penaltyType(): i32 {
    return this[10].toI32();
  }

  get feeBasis(): i32 {
    return this[11].toI32();
  }

  get contractDealDate(): BigInt {
    return this[12].toBigInt();
  }

  get statusDate(): BigInt {
    return this[13].toBigInt();
  }

  get initialExchangeDate(): BigInt {
    return this[14].toBigInt();
  }

  get maturityDate(): BigInt {
    return this[15].toBigInt();
  }

  get terminationDate(): BigInt {
    return this[16].toBigInt();
  }

  get purchaseDate(): BigInt {
    return this[17].toBigInt();
  }

  get capitalizationEndDate(): BigInt {
    return this[18].toBigInt();
  }

  get cycleAnchorDateOfInterestPayment(): BigInt {
    return this[19].toBigInt();
  }

  get cycleAnchorDateOfRateReset(): BigInt {
    return this[20].toBigInt();
  }

  get cycleAnchorDateOfScalingIndex(): BigInt {
    return this[21].toBigInt();
  }

  get cycleAnchorDateOfFee(): BigInt {
    return this[22].toBigInt();
  }

  get cycleAnchorDateOfPrincipalRedemption(): BigInt {
    return this[23].toBigInt();
  }

  get notionalPrincipal(): BigInt {
    return this[24].toBigInt();
  }

  get nominalInterestRate(): BigInt {
    return this[25].toBigInt();
  }

  get feeAccrued(): BigInt {
    return this[26].toBigInt();
  }

  get accruedInterest(): BigInt {
    return this[27].toBigInt();
  }

  get rateMultiplier(): BigInt {
    return this[28].toBigInt();
  }

  get rateSpread(): BigInt {
    return this[29].toBigInt();
  }

  get feeRate(): BigInt {
    return this[30].toBigInt();
  }

  get nextResetRate(): BigInt {
    return this[31].toBigInt();
  }

  get penaltyRate(): BigInt {
    return this[32].toBigInt();
  }

  get premiumDiscountAtIED(): BigInt {
    return this[33].toBigInt();
  }

  get priceAtPurchaseDate(): BigInt {
    return this[34].toBigInt();
  }

  get nextPrincipalRedemptionPayment(): BigInt {
    return this[35].toBigInt();
  }

  get cycleOfInterestPayment(): FillOrderCallOrderTermsCycleOfInterestPaymentStruct {
    return this[36].toTuple() as FillOrderCallOrderTermsCycleOfInterestPaymentStruct;
  }

  get cycleOfRateReset(): FillOrderCallOrderTermsCycleOfRateResetStruct {
    return this[37].toTuple() as FillOrderCallOrderTermsCycleOfRateResetStruct;
  }

  get cycleOfScalingIndex(): FillOrderCallOrderTermsCycleOfScalingIndexStruct {
    return this[38].toTuple() as FillOrderCallOrderTermsCycleOfScalingIndexStruct;
  }

  get cycleOfFee(): FillOrderCallOrderTermsCycleOfFeeStruct {
    return this[39].toTuple() as FillOrderCallOrderTermsCycleOfFeeStruct;
  }

  get cycleOfPrincipalRedemption(): FillOrderCallOrderTermsCycleOfPrincipalRedemptionStruct {
    return this[40].toTuple() as FillOrderCallOrderTermsCycleOfPrincipalRedemptionStruct;
  }

  get lifeCap(): BigInt {
    return this[41].toBigInt();
  }

  get lifeFloor(): BigInt {
    return this[42].toBigInt();
  }

  get periodCap(): BigInt {
    return this[43].toBigInt();
  }

  get periodFloor(): BigInt {
    return this[44].toBigInt();
  }
}

export class FillOrderCallOrderTermsCycleOfInterestPaymentStruct extends EthereumTuple {
  get i(): BigInt {
    return this[0].toBigInt();
  }

  get p(): i32 {
    return this[1].toI32();
  }

  get s(): i32 {
    return this[2].toI32();
  }

  get isSet(): boolean {
    return this[3].toBoolean();
  }
}

export class FillOrderCallOrderTermsCycleOfRateResetStruct extends EthereumTuple {
  get i(): BigInt {
    return this[0].toBigInt();
  }

  get p(): i32 {
    return this[1].toI32();
  }

  get s(): i32 {
    return this[2].toI32();
  }

  get isSet(): boolean {
    return this[3].toBoolean();
  }
}

export class FillOrderCallOrderTermsCycleOfScalingIndexStruct extends EthereumTuple {
  get i(): BigInt {
    return this[0].toBigInt();
  }

  get p(): i32 {
    return this[1].toI32();
  }

  get s(): i32 {
    return this[2].toI32();
  }

  get isSet(): boolean {
    return this[3].toBoolean();
  }
}

export class FillOrderCallOrderTermsCycleOfFeeStruct extends EthereumTuple {
  get i(): BigInt {
    return this[0].toBigInt();
  }

  get p(): i32 {
    return this[1].toI32();
  }

  get s(): i32 {
    return this[2].toI32();
  }

  get isSet(): boolean {
    return this[3].toBoolean();
  }
}

export class FillOrderCallOrderTermsCycleOfPrincipalRedemptionStruct extends EthereumTuple {
  get i(): BigInt {
    return this[0].toBigInt();
  }

  get p(): i32 {
    return this[1].toI32();
  }

  get s(): i32 {
    return this[2].toI32();
  }

  get isSet(): boolean {
    return this[3].toBoolean();
  }
}
